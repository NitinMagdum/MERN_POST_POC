{"version":3,"sources":["layout/Header.js","components/Home.js","components/Homecopy.js","App.js","serviceWorker.js","index.js"],"names":["Header","AppBar","position","Toolbar","Typography","variant","style","flexFrow","Component","BorderLinearProgress","withStyles","theme","root","height","borderRadius","colorPrimary","backgroundColor","palette","grey","type","bar","LinearProgress","Homecopy","props","state","formData","tenant","level","level2","selectFile","testType","testName","testDate","serialNumber","supplierCode","cellId","testSite","showProgressBar","progressValue","handleChange","bind","submitForm","resetForm","e","preventDefault","target","name","value","this","setState","files","console","log","FormData","document","querySelector","axios","method","headers","data","url","onUploadProgress","progress","loaded","total","percentageProgress","Math","floor","then","res","statusText","setTimeout","catch","err","error","getElementById","progressText","Card","width","margin","CardContent","id","encType","Grid","container","spacing","marginTop","item","xs","sm","md","TextField","select","label","onChange","InputLabelProps","shrink","MenuItem","key","Hidden","xsDown","smDown","inputProps","multiple","textAlign","placeholder","display","justifyContent","Button","onClick","marginRight","marginLeft","color","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.871e732f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Tabs, Tab, IconButton } from '@material-ui/core';\r\nimport { AccountCircle } from '@material-ui/icons';\r\n\r\nfunction Header() {\r\n\r\n    /* const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    }; */\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" style={{ flexFrow: 1 }}>File Upload Webapp</Typography>\r\n                    {/*  <Tabs\r\n                        value={value}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        onChange={handleChange}\r\n                        aria-label=\"disabled tabs example\"\r\n                    >\r\n                        <Tab label=\"Active\" />\r\n                        <Tab label=\"Active\" />\r\n                    </Tabs>\r\n                    <IconButton color=\"inherit\">\r\n                        <AccountCircle></AccountCircle>\r\n                    </IconButton>\r\n                    <nav>\r\n                        <ul>\r\n                            <li>\r\n                                <Link to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/about\">About</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/users\">Users</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav> */}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n/* import './Home.css'; */\r\n\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formData: {\r\n                level: '',\r\n                level2: '',\r\n                testType: '',\r\n                testDate: '',\r\n                testName: '',\r\n                serialNumber: '',\r\n                supplierCode: '',\r\n                cellId: '',\r\n                testSite: '',\r\n                selectFile: ''\r\n            }\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.submitForm = this.submitForm.bind(this);\r\n        this.resetForm = this.resetForm.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        // console.log(name);\r\n        // console.log(value);\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [name]: name !== 'selectFile' ? value : e.target.files\r\n            }\r\n        })\r\n    }\r\n    submitForm() {\r\n        console.log(this.state);\r\n        var formData = new FormData(document.querySelector('form'));\r\n        // formData.append('file', this.state.formData.selectFile[0]);\r\n        /* for (const key in this.state.formData) {\r\n            formData.append(key, this.state.formData[key]);\r\n        } */\r\n        /*  for (var i = 0; i < this.state.formData.selectFile.length; i++) {\r\n             formData.append('file', this.state.formData.selectFile[i]);\r\n         } */\r\n        console.log(this.state.formData.selectFile[0]);\r\n        // console.log(this.state.formData.selectFile[1]);\r\n        console.log(formData);\r\n        // const dummy = {name:'test'};\r\n        axios.post(\"http://localhost:8000/upload\", formData, {\r\n        }).then(res => {\r\n            console.log(res.statusText)\r\n        })\r\n    }\r\n    resetForm() {\r\n        console.log(\"reset form\");\r\n        document.getElementById('selectFile').value = ''\r\n        this.setState({\r\n            formData: {\r\n                level: '',\r\n                level2: '',\r\n                testType: '',\r\n                testDate: '',\r\n                testName: '',\r\n                serialNumber: '',\r\n                supplierCode: '',\r\n                cellId: '',\r\n                testSite: '',\r\n                selectFile: ''\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { formData: { level,\r\n            level2,\r\n            testType,\r\n            testDate,\r\n            testName,\r\n            serialNumber,\r\n            supplierCode,\r\n            cellId,\r\n            testSite,\r\n            selectFile } } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <form id=\"myForm\" encType=\"multipart/form-data\">\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-50\">\r\n                            <label htmlFor=\"level\">Level 1</label>\r\n                            <select id=\"level\" name=\"level\" value={level} onChange={this.handleChange}>\r\n                                <option value=\"l1\">Rakuten 1</option>\r\n                                <option value=\"l2\">Rakuten 2</option>\r\n                                <option value=\"l3\">Rakuten 3</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-50\">\r\n                            <label htmlFor=\"level2\">Level 2</label>\r\n                            <select id=\"level2\" name=\"level2\" value={level2} onChange={this.handleChange}>\r\n                                <option value=\"st1\">Shipping Transaction 1</option>\r\n                                <option value=\"st2\">Shipping Transaction 2</option>\r\n                                <option value=\"st3\">Shipping Transaction 3</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-50\">\r\n                            <label htmlFor=\"testType\">Test Type</label>\r\n                            <input type=\"text\" value={testType} id=\"testType\" name=\"testType\" placeholder=\"Enter Test Type\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"col-50\">\r\n                            <label htmlFor=\"testName\">Test Name</label>\r\n                            <input type=\"text\" value={testName} id=\"testName\" name=\"testName\" placeholder=\"Enter Test Name\" onChange={this.handleChange} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-50\">\r\n                            <label htmlFor=\"testDate\">Test Date</label>\r\n                            <input type=\"date\" value={testDate} id=\"testDate\" name=\"testDate\" placeholder=\"Select Test Date\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"col-50\">\r\n                            <label htmlFor=\"serialNumber\">Serial Number</label>\r\n                            <input type=\"text\" value={serialNumber} id=\"number\" name=\"serialNumber\" placeholder=\"Enter Serial Number\" onChange={this.handleChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-50\">\r\n                            <label htmlFor=\"supplierCode\">Supplier Code</label>\r\n                            <input type=\"text\" value={supplierCode} id=\"supplierCode\" name=\"supplierCode\" placeholder=\"Enter Supplier Code\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"col-50\">\r\n                            <label htmlFor=\"cellId\">Cell Id</label>\r\n                            <input type=\"text\" value={cellId} id=\"cellId\" name=\"cellId\" placeholder=\"Enter Cell Id\" onChange={this.handleChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-50\">\r\n                            <label htmlFor=\"testSite\">Test Site</label>\r\n                            <input type=\"text\" value={testSite} id=\"testSite\" name=\"testSite\" placeholder=\"Enter Test Site\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"col-50\">\r\n                            <label htmlFor=\"selectFile\">Select File(s)</label>\r\n                            <input type=\"file\" multiple id=\"selectFile\" name=\"selectFile\" placeholder=\"Select Files\" onChange={this.handleChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"buttonGroupRow\">\r\n                        <div className=\"col-50\">\r\n                            <input type=\"button\" value=\"Submit\" id=\"submitForm\" className=\"btnSubmit\" onClick={this.submitForm} />\r\n                        </div>\r\n                        <div className=\"col-50\">\r\n                            <input type=\"button\" value=\"Reset\" id=\"ResetForm\" className=\"btnReset\" onClick={this.resetForm} />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Grid, Hidden, TextField, Card, CardContent, Button, MenuItem } from '@material-ui/core';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n// import './Homecopy.css';\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n    root: {\r\n        height: 10,\r\n        borderRadius: 5,\r\n    },\r\n    colorPrimary: {\r\n        backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n    },\r\n    bar: {\r\n        borderRadius: 5,\r\n        backgroundColor: '#1a90ff',\r\n    },\r\n}))(LinearProgress);\r\n\r\nclass Homecopy extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formData: {\r\n                tenant: 'Next',\r\n                level: 'Rakuten 1',\r\n                level2: 'Shipping Transaction 1',\r\n                selectFile: '',\r\n                testType: '',\r\n                testName: '',\r\n                testDate: '',\r\n                serialNumber: '',\r\n                supplierCode: '',\r\n                cellId: '',\r\n                testSite: ''\r\n            },\r\n            showProgressBar: false,\r\n            progressValue: 0\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.submitForm = this.submitForm.bind(this);\r\n        this.resetForm = this.resetForm.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        // console.log(name);\r\n        // console.log(value);\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [name]: name !== 'selectFile' ? value : e.target.files\r\n            }\r\n        })\r\n    }\r\n    submitForm() {\r\n        console.log(this.state);\r\n        var formData = new FormData(document.querySelector('form'));\r\n        // formData.append('file', this.state.formData.selectFile[0]);\r\n        /* for (const key in this.state.formData) {\r\n            formData.append(key, this.state.formData[key]);\r\n        } */\r\n        /*  for (var i = 0; i < this.state.formData.selectFile.length; i++) {\r\n             formData.append('file', this.state.formData.selectFile[i]);\r\n         } */\r\n        console.log(this.state.formData.selectFile[0]);\r\n        // console.log(this.state.formData.selectFile[1]);\r\n        console.log(formData);\r\n        // const dummy = {name:'test'};\r\n\r\n        /* axios.post(\"http://localhost:8000/upload\", formData, {\r\n        }).then(res => {\r\n            console.log(res.statusText)\r\n        }) */\r\n\r\n        axios({\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n            data: formData,\r\n            url: 'http://localhost:8000/upload',\r\n            onUploadProgress: (progress) => {\r\n                const { loaded, total } = progress\r\n                const percentageProgress = Math.floor((loaded / total) * 100);\r\n                console.log(percentageProgress);\r\n                if (percentageProgress < 100) {\r\n                    this.setState({\r\n                        ...this.state.formData,\r\n                        showProgressBar: true,\r\n                        progressValue: percentageProgress\r\n                    })\r\n                }\r\n\r\n                /* if (percentageProgress === 100) {\r\n                    this.setState({\r\n                        ...this.state.formData,\r\n                        showProgressBar: false,\r\n                        progressValue: 0\r\n\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        ...this.state.formData,\r\n                        showProgressBar: true,\r\n                        progressValue: percentageProgress\r\n\r\n                    })\r\n                } */\r\n            },\r\n        }).then((res) => {\r\n            console.log(res.statusText)\r\n            this.setState({ progressValue: 100 }, () => {\r\n                setTimeout(() => {\r\n                    this.setState({ progressValue: 0 });\r\n                    this.resetForm();\r\n                }, 500)\r\n            })\r\n        }).catch((err) => {\r\n            console.error(err)\r\n        });\r\n    }\r\n    resetForm() {\r\n        console.log(\"reset form\");\r\n        document.getElementById('selectFile').value = ''\r\n        this.setState({\r\n            formData: {\r\n                tenant: 'Next',\r\n                level: 'Rakuten 1',\r\n                level2: 'Shipping Transaction 1',\r\n                selectFile: '',\r\n                testType: '',\r\n                testName: '',\r\n                testDate: '',\r\n                serialNumber: '',\r\n                supplierCode: '',\r\n                cellId: '',\r\n                testSite: ''\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { formData: {\r\n            tenant,\r\n            level,\r\n            level2,\r\n            selectFile,\r\n            testType,\r\n            testName,\r\n            testDate,\r\n            serialNumber,\r\n            supplierCode,\r\n            cellId,\r\n            testSite\r\n        } } = this.state;\r\n        const { progressValue } = this.state;\r\n        let progressText = progressValue + '%';\r\n        return (\r\n            <Card variant=\"outlined\" style={{ backgroundColor: '#ffffff', width: '70%', margin: '2% auto' }}>\r\n                <CardContent>\r\n\r\n                    <form id=\"myForm\" encType=\"multipart/form-data\">\r\n\r\n                        <Grid container spacing={2} style={{ marginTop: '0px' }}>\r\n\r\n                            <Grid item xs={12} sm={12} md={6}>\r\n                                <TextField\r\n                                    select\r\n                                    label=\"Select Tenant\"\r\n                                    id=\"tenant\" name=\"tenant\"\r\n                                    value={tenant}\r\n                                    onChange={this.handleChange}\r\n                                    variant=\"outlined\"\r\n                                    style={{ margin: '8px', width: '80%' }}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}>\r\n                                    <MenuItem key=\"Next\" value=\"Next\">\r\n                                        Next\r\n                                </MenuItem>\r\n                                    <MenuItem key=\"BCA\" value=\"BCA\">\r\n                                        BCA\r\n                                </MenuItem>\r\n                                    <MenuItem key=\"Instiu\" value=\"Instiu\">\r\n                                        Instiu\r\n                                </MenuItem>\r\n                                </TextField>\r\n                            </Grid>\r\n                            <Hidden xsDown smDown>\r\n                                <Grid item xs={12} sm={12} md={6}>\r\n                                </Grid>\r\n                            </Hidden>\r\n\r\n                            <Grid item xs={12} sm={12} md={6}>\r\n                                <TextField\r\n                                    select\r\n                                    label=\"Level 1\"\r\n                                    id=\"level\" name=\"level\"\r\n                                    value={level}\r\n                                    onChange={this.handleChange}\r\n                                    variant=\"outlined\"\r\n                                    style={{ margin: '8px', width: '80%' }}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}>\r\n                                    <MenuItem key=\"Rakuten 1\" value=\"Rakuten 1\">\r\n                                        Rakuten 1\r\n                                </MenuItem>\r\n                                    <MenuItem key=\"Rakuten 2\" value=\"Rakuten 2\">\r\n                                        Rakuten 2\r\n                                </MenuItem>\r\n                                    <MenuItem key=\"Rakuten 3\" value=\"Rakuten 3\">\r\n                                        Rakuten 3\r\n                                </MenuItem>\r\n                                </TextField>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6}>\r\n                                <TextField\r\n                                    select\r\n                                    label=\"Level 2\"\r\n                                    id=\"level2\" name=\"level2\"\r\n                                    value={level2}\r\n                                    onChange={this.handleChange}\r\n                                    variant=\"outlined\"\r\n                                    style={{ margin: '8px', width: '80%' }}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}>\r\n                                    <MenuItem key=\"Shipping Transaction 1\" value=\"Shipping Transaction 1\">\r\n                                        Shipping Transaction 1\r\n                                </MenuItem>\r\n                                    <MenuItem key=\"Shipping Transaction 2\" value=\"Shipping Transaction 2\">\r\n                                        Shipping Transaction 2\r\n                                </MenuItem>\r\n                                    <MenuItem key=\"Shipping Transaction 3\" value=\"Shipping Transaction 3\">\r\n                                        Shipping Transaction 3\r\n                                </MenuItem>\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={12} md={6}>\r\n                                <TextField\r\n                                    type=\"file\"\r\n                                    inputProps={{ multiple: true }}\r\n                                    id=\"selectFile\"\r\n                                    name=\"selectFile\"\r\n                                    label=\"Select File(s)\"\r\n                                    style={{ margin: '8px', width: '80%' }}\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Hidden xsDown smDown>\r\n                                <Grid item xs={12} sm={12} md={6}>\r\n                                </Grid>\r\n                            </Hidden>\r\n\r\n                            <Grid item xs={12} sm={12}>\r\n                                <h3 style={{ textAlign: 'center' }}>Enter Metadata</h3>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={12} md={6}>\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    id=\"testType\"\r\n                                    value={testType}\r\n                                    name=\"testType\"\r\n                                    label=\"Test Type\"\r\n                                    placeholder=\"Enter Test Type\"\r\n                                    style={{ margin: '8px', width: '80%' }}\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6}>\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    id=\"testName\"\r\n                                    value={testName}\r\n                                    name=\"testName\"\r\n                                    label=\"Test Name\"\r\n                                    placeholder=\"Enter Test Name\"\r\n                                    style={{ margin: '8px', width: '80%' }}\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={12} md={6}>\r\n                                <TextField\r\n                                    type=\"date\"\r\n                                    id=\"testDate\"\r\n                                    value={testDate}\r\n                                    name=\"testDate\"\r\n                                    label=\"Test Date\"\r\n                                    placeholder=\"Select Test Date\"\r\n                                    style={{ margin: '8px', width: '80%' }}\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6}>\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    id=\"serialNumber\"\r\n                                    value={serialNumber}\r\n                                    name=\"serialNumber\"\r\n                                    label=\"Serial Number\"\r\n                                    placeholder=\"Enter Serial Number\"\r\n                                    style={{ margin: '8px', width: '80%' }}\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={12} md={6}>\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    id=\"supplierCode\"\r\n                                    value={supplierCode}\r\n                                    name=\"supplierCode\"\r\n                                    label=\"Supplier Code\"\r\n                                    placeholder=\"Enter Supplier Code\"\r\n                                    style={{ margin: '8px', width: '80%' }}\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6}>\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    id=\"cellId\"\r\n                                    value={cellId}\r\n                                    name=\"cellId\"\r\n                                    label=\"Cell Id\"\r\n                                    placeholder=\"Enter Cell Id\"\r\n                                    style={{ margin: '8px', width: '80%' }}\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={12} md={6}>\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    id=\"testSite\"\r\n                                    value={testSite}\r\n                                    name=\"testSite\"\r\n                                    label=\"Test Site\"\r\n                                    placeholder=\"Enter Test Site\"\r\n                                    style={{ margin: '8px', width: '80%' }}\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Hidden xsDown smDown>\r\n                                <Grid item xs={12} sm={12} md={6}>\r\n                                </Grid>\r\n                            </Hidden>\r\n\r\n                            <Grid item xs={12} >\r\n                                {\r\n                                    progressValue > 0 && (<h5 style={{ textAlign: 'center' }}>{progressText}</h5>)\r\n                                }\r\n                                {\r\n                                    progressValue > 0 &&\r\n                                    <BorderLinearProgress style={{ width: '98%', margin: 'auto' }}\r\n                                        variant=\"determinate\" value={progressValue} />\r\n                                }\r\n                            </Grid>\r\n\r\n                            <Hidden xsDown smDown>\r\n                                <Grid item xs={12} sm={12} md={6}>\r\n                                </Grid>\r\n                            </Hidden>\r\n                            <Grid item xs={12} sm={12} md={6} style={{ display: 'flex', justifyContent: 'end' }}>\r\n                                <Button variant=\"contained\" id=\"ResetForm\" onClick={this.resetForm}\r\n                                    style={{ marginRight: '20px', marginLeft: '15px' }}>\r\n                                    Reset\r\n                                </Button>\r\n                                <Button variant=\"contained\" color=\"primary\" id=\"submitForm\" onClick={this.submitForm}\r\n                                    style={{ marginRight: '10px' }}>\r\n                                    Upload\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </form>\r\n\r\n                </CardContent>\r\n            </Card >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homecopy;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport { Header } from './layout';\nimport { Home, Homecopy } from './components';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Header></Header>\n        <Switch>\n          <Route path=\"/\">\n            {/* <Home /> */}\n            <Homecopy />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}